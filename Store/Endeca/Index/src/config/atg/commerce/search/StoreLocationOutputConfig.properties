# @version $Id: //hosting-blueprint/B2CBlueprint/version/11.3.1/Endeca/Index/config/atg/commerce/search/StoreLocationOutputConfig.properties#1 $$Change: 1497274 $
$class=atg.endeca.index.EndecaIndexingOutputConfig
$scope=global
$description=Output configuration for store/location indexing

# The definition file that defines our indexing topology
definitionFile=/atg/commerce/endeca/index/store-location-output-config.xml

# The Location repository.
repository=/atg/commerce/locations/LocationRepository

# The bulk loader component
bulkLoader=/atg/search/repository/BulkLoader

# The incremental loader component
incrementalLoader=/atg/search/repository/IncrementalLoader

# Never do incremental updates, because SearchAdmin now handles this
incrementalUpdateMinutes=-1

# A flag to indicate if we should employ incremental indexing
# on the location repository.
enableIncrementalLoading=true

# Specify whether scheduled bulk loading is enabled.
enableScheduledBulkLoading=false

# Use our default RecordStoreDocumentSubmitter
documentSubmitter=/atg/endeca/index/DataDocumentSubmitter

# since we aren't using ATG Search Admin, we need to
# auto create incremental change queues.
autoCreateInitialQueues=true

#update the type location with store for prefix replacement.
prefixReplacementMap+=\
  location=store

# Add our our DynamicPropertySchemaSynchronization as an 
# IndexingSynchronizations so it will submit records to
# the schema records store for dynamic properties
indexingSynchronizations+=\
  /atg/commerce/endeca/index/StoreLocationDynamicPropertySchemaSynchronization

# Add our our DynamicPropertySchemaSynchronization as an 
# processingPropertiesCallback so it will track
# dynamic properties as they are generated
processingPropertiesCallbacks+=\
  /atg/commerce/endeca/index/StoreLocationDynamicPropertySchemaSynchronization

# list of site IDs to index. Limits indexing to the explicit list of sties.
# If null (the default), will index all sites.
#
siteIDsToIndex^=/atg/commerce/search/ProductCatalogOutputConfig.siteIDsToIndex

# Set document id generator to use explicitly generated ids rather than
# item URL as id
documentIdGenerator=/atg/search/repository/DocumentIdGenerator

# our indexingApplicationConfiguration, from which we get Locale
# information.
indexingApplicationConfiguration=/atg/endeca/index/IndexingApplicationConfiguration

# add site ids variant producer to ensure sites get added for stores 
variantProducers+=/atg/endeca/index/producer/SiteIdsVariantProducer